# Minimal and Powerful Tmux Configuration (auto-rendered by chezmoi)

# Shared color palette (mirrors Neovim lualine theme)
set -g @ui-bg "#11111b"
set -g @ui-fg "#cdd6f4"
set -g @ui-muted "#313244"
set -g @ui-accent-blue "#89b4fa"
set -g @ui-accent-teal "#94e2d5"
set -g @ui-accent-green "#a6e3a1"
set -g @ui-accent-pink "#f38ba8"
set -g @ui-accent-yellow "#f9e2af"
set -g @ui-accent-purple "#cba6f7"

set -g @ui-prefix-on '#[fg=#{@ui-bg},bg=#{@ui-accent-pink},bold] ⌨  PREFIX #[fg=#{@ui-accent-pink},bg=#{@ui-bg}]▓▒░'
set -g @ui-prefix-off ''

# Set prefix to ` (backtick); double-tap ` to insert a literal backtick
unbind C-b
set -g prefix "`"
# Make bare ` behave like a prefix key while allowing double-tap passthrough
bind -n "`" if -F '#{==:#{client_key_table},prefix}' 'send-prefix' 'switch-client -T prefix'
bind "`" send-prefix

# Enable mouse support
set -g mouse on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Enable true color support
set -g default-terminal "tmux-256color"
set -as terminal-features "xterm-256color:RGB"

# Faster escape time for Neovim
set -sg escape-time 10

# Increase history limit
set -g history-limit 50000

# Focus events for Neovim
set-option -g focus-events on

# Clipboard integration
set -g set-clipboard on

# Vi mode for copy mode
set-window-option -g mode-keys vi

# Better copy mode bindings (copy selection to clipboard)
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel '{{ if eq .chezmoi.os "darwin" }}pbcopy{{ else }}xclip -selection clipboard{{ end }}'

# Enter copy mode with prefix + [
bind Enter copy-mode

# Split panes with | and - (more intuitive)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"  # Alternative for easier access
bind _ split-window -v -c "#{pane_current_path}"    # Alternative for easier access

# Navigation that doesn't conflict with Neovim
# Use prefix + hjkl for pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Option/Alt + number to switch windows directly
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Option/Alt + h/l to switch windows
bind -n M-h previous-window
bind -n M-l next-window

# Resize panes with prefix + Shift + vim keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Easy config reload
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"

# Status bar configuration (compliments Neovim lualine)
set -g status on
set -g status-interval 1
set -g status-position bottom
set -g status-justify left
set -gF status-style "bg=#{@ui-bg} fg=#{@ui-fg}"

set -g status-left-length 80
set -g status-left '#[fg=#{@ui-bg},bg=#{@ui-accent-blue},bold]   #S #[fg=#{@ui-accent-blue},bg=#{@ui-accent-purple}]▓▒░#[fg=#{@ui-bg},bg=#{@ui-accent-purple}]   BinBandit #[fg=#{@ui-accent-purple},bg=#{@ui-bg}]▓▒░'

set -g window-status-separator ""
set -g window-status-format '#[fg=#{@ui-muted},bg=#{@ui-bg}] #{?#{m:*nvim*,#W}, , }#I:#W '
set -g window-status-current-format '#[fg=#{@ui-bg},bg=#{@ui-accent-teal},bold] #{?#{m:*nvim*,#W}, , }#I:#W #{?window_zoomed_flag,󱐋 ,}#{?pane_synchronized,󰑓 ,}#[fg=#{@ui-accent-teal},bg=#{@ui-bg}]▓▒░'

set -g status-right-length 120
set -g status-right '#{?client_prefix,#{@ui-prefix-on},#{@ui-prefix-off}}#[fg=#{@ui-bg},bg=#{@ui-accent-green}] #{shell,~/.config/tmux/scripts/status-sys.sh} #[fg=#{@ui-accent-green},bg=#{@ui-accent-yellow}]▓▒░#[fg=#{@ui-bg},bg=#{@ui-accent-yellow}] #{pomodoro_status} #[fg=#{@ui-accent-yellow},bg=#{@ui-accent-purple}]▓▒░#[fg=#{@ui-bg},bg=#{@ui-accent-purple}] %a %d %b #[fg=#{@ui-accent-purple},bg=#{@ui-accent-blue}]▓▒░#[fg=#{@ui-bg},bg=#{@ui-accent-blue}] %H:%M #[fg=#{@ui-accent-blue},bg=#{@ui-bg}]▓▒░'

# Pane borders + popups match the palette
set -gF pane-border-style "fg=#{@ui-muted}"
set -gF pane-active-border-style "fg=#{@ui-accent-blue}"
set -gF display-panes-colour "#{@ui-muted}"
set -gF display-panes-active-colour "#{@ui-accent-teal}"

# Message styling
set -gF message-style "fg=#{@ui-bg} bg=#{@ui-accent-pink} bold"
set -gF message-command-style "fg=#{@ui-fg} bg=#{@ui-muted}"

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off
set -g activity-action none

# Window naming
setw -g automatic-rename on
set -g set-titles on

# Create new window with current path
bind c new-window -c "#{pane_current_path}"

# Quick window switching
bind Space last-window
bind Tab last-window

# Synchronize panes toggle
bind y setw synchronize-panes \; display-message "Synchronize panes: #{?synchronize-panes,ON,OFF}"

# Toggle pane zoom
bind z resize-pane -Z

# Kill pane/window without confirmation
bind x kill-pane
bind X kill-window

# Move windows left/right
bind -r < swap-window -t -1 \; previous-window
bind -r > swap-window -t +1 \; next-window

# Join/send panes
bind j choose-window 'join-pane -h -s "%%"'
bind s choose-window 'send-pane -h -t "%%"'

# Better session management
bind C-s choose-tree -Zs
bind C-w choose-tree -Zw

# Quick pane cycling
bind -r n select-pane -t :.+
bind -r p select-pane -t :.-

# Display panes with longer timeout
set -g display-panes-time 2000

# Popup window (tmux 3.2+)
bind P display-popup -E -w 80% -h 80%

# Git operations menu
bind g display-menu -x C -y C \
  "git status"  s "display-popup -E -w 90% -h 90% -d '#{pane_current_path}' 'git status -sb; read'" \
  "git diff"    d "display-popup -E -w 90% -h 90% -d '#{pane_current_path}' 'git diff --color | less -R'" \
  "git log"     l "display-popup -E -w 90% -h 90% -d '#{pane_current_path}' 'git log --oneline --graph --color | less -R'" \
  "lazygit"     g "display-popup -E -w 90% -h 90% -d '#{pane_current_path}' 'lazygit'"

# Quick test runner
bind t display-popup -E -w 90% -h 60% -d "#{pane_current_path}" "npm test || cargo test || go test ./... || pytest || echo 'No test command found'"

# Quick build
bind b display-popup -E -w 90% -h 60% -d "#{pane_current_path}" "make || npm run build || cargo build || go build || echo 'No build command found'"

# Open file picker in Neovim popup
bind F display-popup -E -w 90% -h 90% -d "#{pane_current_path}" "nvim +Telescope\\ find_files"

# Open current directory in system file explorer
{{- if eq .chezmoi.os "darwin" -}}
bind o run-shell "open '#{pane_current_path}'"
{{- else -}}
bind o run-shell "xdg-open '#{pane_current_path}'"
{{- end -}}

# Smart pane switching with awareness of Vim splits (vim-tmux-navigator compatible)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
