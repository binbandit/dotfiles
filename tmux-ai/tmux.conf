# Minimal and Powerful Tmux Configuration for macOS

# Set prefix to Ctrl-` (backtick) - rarely conflicts, easy to reach
unbind C-b
set -g prefix C-`
bind C-` send-prefix

# Enable mouse support
set -g mouse on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Enable true color support
set -g default-terminal "screen-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Faster escape time for Neovim
set -sg escape-time 10

# Increase history limit
set -g history-limit 50000

# Focus events for Neovim
set-option -g focus-events on

# macOS clipboard integration
set -g set-clipboard on

# Vi mode for copy mode
set-window-option -g mode-keys vi

# Better copy mode bindings for macOS
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Enter copy mode with prefix + [
bind Enter copy-mode

# Split panes with | and - (more intuitive)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"  # Alternative for easier access
bind _ split-window -v -c "#{pane_current_path}"    # Alternative for easier access

# Navigation that doesn't conflict with Neovim
# Use prefix + hjkl for pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Option + number to switch windows directly (macOS friendly)
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Option + h/l to switch windows
bind -n M-h previous-window
bind -n M-l next-window

# Resize panes with prefix + Shift + vim keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Easy config reload
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"

# Status bar configuration
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=#1e1e2e fg=#cdd6f4'

# Left side of status bar
set -g status-left-length 100
set -g status-left '#[fg=#1e1e2e,bg=#89b4fa,bold] #S #[fg=#89b4fa,bg=#1e1e2e,nobold]'

# Window status with Neovim indicator
set -g window-status-current-format '#{?#{m:*nvim*,#W},#[fg=#1e1e2e bg=#a6e3a1 bold]  #I:#W #[fg=#a6e3a1 bg=#1e1e2e nobold],#[fg=#1e1e2e bg=#cba6f7 bold] #I:#W#{?window_zoomed_flag, üîç,}#{?pane_synchronized, üîó,} #[fg=#cba6f7 bg=#1e1e2e nobold]}'
set -g window-status-format '#{?#{m:*nvim*,#W},#[fg=#a6e3a1 bg=#1e1e2e]  #I:#W ,#[fg=#6c7086 bg=#1e1e2e] #I:#W#{?window_zoomed_flag, üîç,} }'

# Right side of status bar - with battery status
set -g status-right-length 100
set -g status-right '#{prefix_highlight} #[fg=#f38ba8,bg=#1e1e2e]#[fg=#1e1e2e,bg=#f38ba8] %H:%M #[fg=#fab387,bg=#f38ba8]#[fg=#1e1e2e,bg=#fab387] %d-%b-%y '

# Pane borders
set -g pane-border-style 'fg=#313244'
set -g pane-active-border-style 'fg=#89b4fa'

# Message style
set -g message-style 'fg=#cdd6f4 bg=#1e1e2e bold'

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off
set -g activity-action none

# Window naming
setw -g automatic-rename on
set -g set-titles on

# Create new window with current path
bind c new-window -c "#{pane_current_path}"

# Quick window switching
bind Space last-window
bind Tab last-window

# Synchronize panes toggle
bind y setw synchronize-panes \; display-message "Synchronize panes: #{?synchronize-panes,ON,OFF}"

# Toggle pane zoom
bind z resize-pane -Z

# Kill pane/window without confirmation
bind x kill-pane
bind X kill-window

# Move windows left/right
bind -r < swap-window -t -1 \; previous-window
bind -r > swap-window -t +1 \; next-window

# Join/send panes
bind j choose-window 'join-pane -h -s "%%"'
bind s choose-window 'send-pane -h -t "%%"'

# Better session management
bind C-s choose-tree -Zs
bind C-w choose-tree -Zw

# Quick pane cycling
bind -r n select-pane -t :.+
bind -r p select-pane -t :.-

# Display panes with longer timeout
set -g display-panes-time 2000

# Popup window (tmux 3.2+)
bind P display-popup -E -w 80% -h 80%

# Git operations menu
bind g display-menu -x C -y C \
  "git status"  s "display-popup -E -w 90% -h 90% -d '#{pane_current_path}' 'git status -sb; read'" \
  "git diff"    d "display-popup -E -w 90% -h 90% -d '#{pane_current_path}' 'git diff --color | less -R'" \
  "git log"     l "display-popup -E -w 90% -h 90% -d '#{pane_current_path}' 'git log --oneline --graph --color | less -R'" \
  "lazygit"     g "display-popup -E -w 90% -h 90% -d '#{pane_current_path}' 'lazygit'"

# Quick test runner
bind t display-popup -E -w 90% -h 60% -d "#{pane_current_path}" "npm test || cargo test || go test ./... || pytest || echo 'No test command found'"

# Quick build
bind b display-popup -E -w 90% -h 60% -d "#{pane_current_path}" "make || npm run build || cargo build || go build || echo 'No build command found'"

# Open file picker in Neovim popup
bind F display-popup -E -w 90% -h 90% -d "#{pane_current_path}" "nvim +Telescope\\ find_files"

# Open current directory in Finder
bind o run-shell "open '#{pane_current_path}'"

# Smart pane switching with awareness of Vim splits
# Works with vim-tmux-navigator plugin
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

# Clear screen with prefix + Ctrl-l
bind C-l send-keys 'C-l'

# Clear scrollback buffer - use prefix + C-k instead of global C-k
bind C-k send-keys -R \; clear-history

# Save buffer to file
bind S command-prompt -p 'save history to:' -I '~/tmux-history-%Y%m%d-%H%M%S.log' 'capture-pane -S - -E - ; save-buffer %1 ; delete-buffer'

# Quick session switching with fzf
bind f run-shell "tmux list-sessions -F '#{session_name}' | fzf --reverse | xargs tmux switch-client -t"

# Navigate to last active pane
bind -n M-o select-pane -l

# Quick 70/30 split for code + terminal
bind V split-window -h -p 30 -c "#{pane_current_path}"

# Run last command in new pane
bind ! split-window -v -p 20 -c "#{pane_current_path}" "$(fc -ln -1)"

# Incremental search in copy mode
bind-key -T copy-mode-vi / command-prompt -i -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""

# Quick copy mode with search
bind / copy-mode \; send-keys ?

# Initialize TMUX plugin manager (keep this line at the very bottom)
set -g @plugin 'tmux-plugins/tpm'

# Essential plugins
set -g @plugin 'tmux-plugins/tmux-sensible'        # Sensible defaults
set -g @plugin 'tmux-plugins/tmux-resurrect'       # Persist sessions across restarts
set -g @plugin 'tmux-plugins/tmux-continuum'       # Automatic session saving
set -g @plugin 'tmux-plugins/tmux-yank'            # Better copy/paste
set -g @plugin 'tmux-plugins/tmux-prefix-highlight' # Show when prefix is active
set -g @plugin 'tmux-plugins/tmux-open'            # Open files/urls from tmux
set -g @plugin 'tmux-plugins/tmux-copycat'         # Better searching
set -g @plugin 'laktak/extrakto'                   # Fuzzy find and copy text
set -g @plugin 'wfxr/tmux-fzf-url'                 # Open URLs with fzf
set -g @plugin 'fcsonline/tmux-thumbs'             # Copy any text with hints
set -g @plugin 'tmux-plugins/tmux-logging'         # Log pane output

# Plugin configurations
# Resurrect - restore Neovim sessions
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'

# Continuum - automatic restore
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# Prefix highlight
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green'

# Extrakto
set -g @extrakto_split_direction 'v'
set -g @extrakto_split_size '15'
set -g @extrakto_grab_area 'window recent'

# Thumbs - copy text with hints
set -g @thumbs-command 'echo -n {} | pbcopy'
set -g @thumbs-key T

# Logging
set -g @logging-path "~/tmux-logs"
set -g @screen-capture-path "~/tmux-logs"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'