#!/usr/bin/env bash
set -euo pipefail

if ! command -v cargo >/dev/null 2>&1; then
  exit 0
fi

{{- $root := . -}}
{{- $data := fromToml (include ".chezmoidata.toml") -}}
{{- $defaults := $data.defaults | default (dict) -}}
{{- $host := (index ($data.hosts | default (dict)) .chezmoi.hostname) | default (dict) -}}
{{- $defaultsCustom := (index $defaults "custom_tools") | default (dict) -}}
{{- $hostCustom := (index $host "custom_tools") | default (dict) -}}
{{- $cargoDefaults := (index $defaultsCustom "cargo") | default (list) -}}
{{- $cargoHost := (index $hostCustom "cargo") | default (list) }}

tools=(
{{- range $tool := $cargoDefaults }}
  "name={{ $tool.name }} git={{ $tool.git }}{{ with $bin := (index $tool "bin") }}{{ printf " bin=%s" $bin }}{{ end }}"
{{- end }}
{{- range $tool := $cargoHost }}
  "name={{ $tool.name }} git={{ $tool.git }}{{ with $bin := (index $tool "bin") }}{{ printf " bin=%s" $bin }}{{ end }}"
{{- end }}
)

for entry in "${tools[@]}"; do
  unset name git bin
  eval "$entry"
  if [[ -z "${name:-}" || -z "${git:-}" ]]; then
    continue
  fi

  args=(install "$name" --git "$git" --locked)
  if [[ -n "${bin:-}" ]]; then
    args+=(--bin "$bin")
  fi

  if cargo install --list 2>/dev/null | grep -q "^${name} "; then
    cargo "${args[@]}" --force >/dev/null
  else
    cargo "${args[@]}" >/dev/null
  fi

done
